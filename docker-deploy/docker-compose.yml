version: '3.7'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    # networks:
    #   - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    # networks:
    #   - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    # networks:
    #   - elk
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    # networks:
    #   - elk
  
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mem
    # networks:
    #   - elk

  ner-proxy:
    build:
      context: ../nlp_proxy_service
      dockerfile: Dockerfile
    entrypoint: ["java","-cp","/opt/app:/opt/app/lib/*","com.capps.nlp.NlpApplication"]
    ports:
      - 8081:8081
    # networks:
    #   - elk
  ocr:
    build:
      context: ../ocr_service
      dockerfile: Dockerfile
    entrypoint: ["java","-cp","/opt/app:/opt/app/lib/*","com.capps.ocr.OCRApplication"]
    ports:
      - 8080:8080
    # networks:
    #   - elk
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    # networks:
    #   - elk

  redis:
    image: bitnami/redis:latest
    environment:
    - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    # networks:
    #   - elk
# networks:
#   elk:
#     driver: bridge

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    # depends_on:
    #   - storage
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
volumes:
  elasticsearch:
